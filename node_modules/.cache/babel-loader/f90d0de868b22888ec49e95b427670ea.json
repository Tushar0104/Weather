{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\OneDrive\\\\Desktop\\\\frontend\\\\src\\\\Components\\\\sub-components\\\\AnimeGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport ImageList from '@mui/material/ImageList';\nimport { Link } from 'react-router-dom';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimeGrid = props => {\n  _s();\n\n  const {\n    data,\n    username\n  } = props;\n  const matches = useMediaQuery('(max-width:550px)');\n  console.log(matches);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ImageList, {\n      cols: matches ? 2 : 5,\n      style: {\n        padding: \"8px\",\n        gap: \"16px\"\n      },\n      children: data && data.data.documents && data.data.documents.map((val, index) => {\n        const detailsPath = `/details/${val.anilist_id}/${username}`;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: detailsPath,\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              maxWidth: 245,\n              height: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"65%\",\n              image: val.cover_image,\n              alt: val.titles.en\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                bgcolor: \"#1b1b1b\",\n                color: \"rgb(255,193,25)\",\n                height: \"35%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                padding: \"8px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h6\",\n                component: \"div\",\n                children: val.titles.en\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"rgb(255,255,255)\",\n                children: [\"No. of Episodes \", val.episodes_count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this)\n        }, val.anilist_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnimeGrid, \"Notg82ym9o1DByeCiLcTemAcsz0=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = AnimeGrid;\nexport default AnimeGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeGrid\");","map":{"version":3,"sources":["C:/Users/tusha/OneDrive/Desktop/frontend/src/Components/sub-components/AnimeGrid.js"],"names":["React","Card","CardContent","CardMedia","Typography","ImageList","Link","useMediaQuery","AnimeGrid","props","data","username","matches","console","log","padding","gap","documents","map","val","index","detailsPath","anilist_id","textDecoration","maxWidth","height","cover_image","titles","en","bgcolor","color","display","flexDirection","justifyContent","episodes_count"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAmBF,KAAzB;AACA,QAAMG,OAAO,GAAGL,aAAa,CAAC,mBAAD,CAA7B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,OAAO,GAAG,CAAH,GAAO,CAA/B;AAAmC,MAAA,KAAK,EAAE;AAACG,QAAAA,OAAO,EAAC,KAAT;AAAgBC,QAAAA,GAAG,EAAC;AAApB,OAA1C;AAAA,gBAEQN,IAAI,IAAIA,IAAI,CAACA,IAAL,CAAUO,SAAlB,IAA+BP,IAAI,CAACA,IAAL,CAAUO,SAAV,CAAoBC,GAApB,CAAwB,CAACC,GAAD,EAAKC,KAAL,KAAa;AAChE,cAAMC,WAAW,GAAI,YAAWF,GAAG,CAACG,UAAW,IAAGX,QAAS,EAA3D;AACA,4BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEU,WAAV;AAAuB,UAAA,KAAK,EAAE;AAACE,YAAAA,cAAc,EAAC;AAAhB,WAA9B;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AAAEC,cAAAA,QAAQ,EAAE,GAAZ;AAAiBC,cAAAA,MAAM,EAAC;AAAxB,aAAV;AAAA,oCACI,QAAC,SAAD;AACI,cAAA,SAAS,EAAC,KADd;AAEI,cAAA,MAAM,EAAC,KAFX;AAGI,cAAA,KAAK,EAAEN,GAAG,CAACO,WAHf;AAII,cAAA,GAAG,EAAEP,GAAG,CAACQ,MAAJ,CAAWC;AAJpB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI,QAAC,WAAD;AAAa,cAAA,EAAE,EAAE;AAAEC,gBAAAA,OAAO,EAAE,SAAX;AAAsBC,gBAAAA,KAAK,EAAC,iBAA5B;AAA+CL,gBAAAA,MAAM,EAAC,KAAtD;AAA6DM,gBAAAA,OAAO,EAAC,MAArE;AAA6EC,gBAAAA,aAAa,EAAC,QAA3F;AAAqGC,gBAAAA,cAAc,EAAC,QAApH;AAA8HlB,gBAAAA,OAAO,EAAC;AAAtI,eAAjB;AAAA,sCACI,QAAC,UAAD;AAAY,gBAAA,YAAY,MAAxB;AAAyB,gBAAA,OAAO,EAAC,IAAjC;AAAsC,gBAAA,SAAS,EAAC,KAAhD;AAAA,0BACKI,GAAG,CAACQ,MAAJ,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAC,kBAAlB;AAAA,+CACqBT,GAAG,CAACe,cADzB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAA4Df,GAAG,CAACG,UAAhE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAoBH,OAtB8B;AAFvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAnCD;;GAAMd,S;UAEcD,a;;;KAFdC,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport ImageList from '@mui/material/ImageList';\nimport { Link } from 'react-router-dom';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst AnimeGrid = (props) => {\n    const {data, username} = props;\n    const matches = useMediaQuery('(max-width:550px)');\n    console.log(matches);\n    return (\n        <div>\n            <ImageList cols={matches ? 2 : 5 } style={{padding:\"8px\", gap:\"16px\"}}>\n                {\n                    data && data.data.documents && data.data.documents.map((val,index)=>{\n                        const detailsPath = `/details/${val.anilist_id}/${username}`;\n                        return(\n                            <Link to={detailsPath} style={{textDecoration:\"none\"}} key={val.anilist_id}>\n                                <Card sx={{ maxWidth: 245, height:\"100%\"}}>\n                                    <CardMedia\n                                        component=\"img\"\n                                        height=\"65%\"\n                                        image={val.cover_image}\n                                        alt={val.titles.en}\n                                    />\n                                    <CardContent sx={{ bgcolor: \"#1b1b1b\", color:\"rgb(255,193,25)\", height:\"35%\", display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", padding:\"8px\"}}>\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\">\n                                            {val.titles.en}\n                                        </Typography>\n                                        <Typography color=\"rgb(255,255,255)\">\n                                            No. of Episodes {val.episodes_count}\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Link>\n                        );\n                    })\n                }\n            </ImageList>\n        </div>\n    )\n}\n\nexport default AnimeGrid\n"]},"metadata":{},"sourceType":"module"}