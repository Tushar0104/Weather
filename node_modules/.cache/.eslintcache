[{"C:\\Users\\tusha\\OneDrive\\Desktop\\frontend\\src\\index.js":"1","C:\\Users\\tusha\\OneDrive\\Desktop\\frontend\\src\\App.js":"2","C:\\Users\\tusha\\OneDrive\\Desktop\\frontend\\src\\Components\\Signup.js":"3","C:\\Users\\tusha\\OneDrive\\Desktop\\frontend\\src\\Components\\Login.js":"4"},{"size":197,"mtime":1671909766271,"results":"5","hashOfConfig":"6"},{"size":563,"mtime":1671911265304,"results":"7","hashOfConfig":"6"},{"size":4430,"mtime":1671922412043,"results":"8","hashOfConfig":"6"},{"size":4229,"mtime":1671911379730,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1taqgy0",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\tusha\\OneDrive\\Desktop\\frontend\\src\\index.js",[],["20","21"],"C:\\Users\\tusha\\OneDrive\\Desktop\\frontend\\src\\App.js",[],"C:\\Users\\tusha\\OneDrive\\Desktop\\frontend\\src\\Components\\Signup.js",[],"C:\\Users\\tusha\\OneDrive\\Desktop\\frontend\\src\\Components\\Login.js",["22"],"import React,{useState} from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LockIcon from '@mui/icons-material/Lock';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst RedditTextField = styled((props) => (\n  <TextField InputProps={{ disableUnderline: true }} {...props} />\n  ))(({ theme }) => ({\n  '& .MuiFilledInput-root': {\n    border: '1px solid rgba(255,193,25,0.25)',\n    color: \"#fff\",\n    overflow: 'hidden',\n    borderRadius: 4,\n    transition: theme.transitions.create([\n      'border-color',\n      'background-color',\n      'box-shadow',\n    ]),\n    '&.Mui-focused': {\n      backgroundColor: 'transparent',\n      boxShadow: `rgba(255,193,25,0.25) 0 0 0 2px`,\n      borderColor: `rgb(255,193,25)`\n    },\n  },\n}));\n\nconst Login = (props) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    const [alertVar, setAlertVar] = useState('');\n    \n    const obj = {\n      \"username\": username,\n      \"password\": password\n    }\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n    \n    function handleClick(){\n      // if(obj.username!==\"\" && obj.password!==\"\" && obj.email!==\"\"){\n      //   axios.post(\"https://anime-website-project.herokuapp.com/home/login\", obj)\n      //   .then(res=>{\n      //     if(res.data===\"Login Successfully\"){\n      //       props.history.push(`/home/${username}`);\n      //     }else if(res.data === \"Username And Password Do Not Match\"){\n      //       setAlertVar(res.data);\n      //       setOpen(true);\n      //     }\n      //   });\n      // }else\n      if(obj.username===\"\" || obj.password===\"\" || obj.email===\"\"){\n        setAlertVar(\"Please Fill All Details\");\n        setOpen(true);\n      }\n    }\n    return (\n      <div style={{height:\"100%\"}}>\n        <div className=\"login-container\">\n            <div className=\"input-field\">\n              <PersonIcon className=\"icon\" />  \n              <RedditTextField\n                label=\"Username\"\n                InputLabelProps={{className:\"label-color\"}}\n                onChange={(e)=>setUsername(e.target.value)}\n                required\n                id=\"reddit-input\"\n                variant=\"filled\"\n                value={username}\n              />\n            </div>\n            <div className=\"input-field\">\n            <LockIcon className=\"icon\" />\n            <RedditTextField\n              label=\"Password\"\n              type=\"password\"\n              InputLabelProps={{className:\"label-color\"}}\n              onChange={(e)=>setPassword(e.target.value)}\n              required\n              id=\"reddit-input\"\n              variant=\"filled\"\n              value={password}\n          />\n            </div>\n            <Button style={{backgroundColor:\"#ffc119\"}} onClick={()=>{handleClick()}} variant=\"contained\" size=\"large\">\n              Login\n            </Button>\n            <h4>Not Yet A User? <span className=\"register\" onClick={()=>props.history.push(\"/signup\")}>Register Here</span></h4>\n        </div>\n        <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle>{\"Attention!\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              {alertVar}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>OK</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}\n\nexport default Login\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":3,"column":8,"nodeType":"29","messageId":"30","endLine":3,"endColumn":13},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]